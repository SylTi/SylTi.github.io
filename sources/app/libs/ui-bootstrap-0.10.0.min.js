




<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>bootstrap/ui-bootstrap-0.10.0.min.js at gh-pages Â· angular-ui/bootstrap</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="angular-ui/bootstrap" name="twitter:title" /><meta content="Native AngularJS (Angular) directives for Twitter&amp;#39;s Bootstrap. Small footprint (5kB gzipped!), no 3rd party JS dependencies (jQuery, bootstrap JS) required!" name="twitter:description" /><meta content="https://2.gravatar.com/avatar/46d07086561c66caae16ce4d96bfd345?d=https%3A%2F%2Fidenticons.github.com%2F3902b30e7e55d0ffde5994d69bf8d4e6.png&amp;r=x&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://2.gravatar.com/avatar/46d07086561c66caae16ce4d96bfd345?d=https%3A%2F%2Fidenticons.github.com%2F3902b30e7e55d0ffde5994d69bf8d4e6.png&amp;r=x&amp;s=400" property="og:image" /><meta content="angular-ui/bootstrap" property="og:title" /><meta content="https://github.com/angular-ui/bootstrap" property="og:url" /><meta content="Native AngularJS (Angular) directives for Twitter&#39;s Bootstrap. Small footprint (5kB gzipped!), no 3rd party JS dependencies (jQuery, bootstrap JS) required!" property="og:description" />

    <meta name="hostname" content="github-fe128-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 2.1.0p0-github-tcmalloc (87d8860372) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="52F789CC:3E5D:83A68F:52F25DBF" name="octolytics-dimension-request_id" /><meta content="1770876" name="octolytics-actor-id" /><meta content="SylTi" name="octolytics-actor-login" /><meta content="643fd257bb0a61da813a769837ef303b7eab54aa73484f096e30ffed9ccbc98a" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="UMP1Nwk3eNFtPHFndc4NZNE220Z0ukUye4XluzTx1Zk=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-71564d84c77aaffaa3f004e2616af4a1113b044b.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-9435e6151d831c7c0ea851d5963b20db08f8b3d0.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://github.global.ssl.fastly.net/assets/frameworks-6629588efc908265e5f194016e81140bfa95e9ee.js" type="text/javascript"></script>
      <script async="async" defer="defer" src="https://github.global.ssl.fastly.net/assets/github-ab273a0202e49e595f9934f53e64bd784939ea3b.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="8447cdbc95f8302777cddcad10da94f0">

        <link data-pjax-transient rel='permalink' href='/angular-ui/bootstrap/blob/080bcc1315a69ac0d23303a52711c511e5fee54d/ui-bootstrap-0.10.0.min.js'>

  <meta name="description" content="Native AngularJS (Angular) directives for Twitter&#39;s Bootstrap. Small footprint (5kB gzipped!), no 3rd party JS dependencies (jQuery, bootstrap JS) required!" />

  <meta content="1530011" name="octolytics-dimension-user_id" /><meta content="angular-ui" name="octolytics-dimension-user_login" /><meta content="6094683" name="octolytics-dimension-repository_id" /><meta content="angular-ui/bootstrap" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="6094683" name="octolytics-dimension-repository_network_root_id" /><meta content="angular-ui/bootstrap" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/angular-ui/bootstrap/commits/gh-pages.atom" rel="alternate" title="Recent Commits to bootstrap:gh-pages" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" class="notification-indicator tooltipped downwards" data-gotokey="n" title="You have unread notifications">
        <span class="mail-status unread"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="SylTi"
      data-repo="angular-ui/bootstrap"
      data-branch="gh-pages"
      data-sha="23198bba18750a60e503eb1e25a89fa3ab741f57"
  >

    <input type="hidden" name="nwo" value="angular-ui/bootstrap" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/SylTi" class="name">
        <img alt="SylTi" height="20" src="https://0.gravatar.com/avatar/bce7e5bcf9a3588756fbefa18519a768?d=https%3A%2F%2Fidenticons.github.com%2F8b5c429f5193dc4a670ff0814155f3fe.png&amp;r=x&amp;s=140" width="20" /> SylTi
      </a>
    </li>

    <li class="new-menu dropdown-toggle js-menu-container">
      <a href="#" class="js-menu-target tooltipped downwards" title="Create new..." aria-label="Create new...">
        <span class="octicon octicon-plus"></span>
        <span class="dropdown-arrow"></span>
      </a>

      <div class="js-menu-content">
      </div>
    </li>

    <li>
      <a href="/settings/profile" id="account_settings"
        class="tooltipped downwards"
        aria-label="Account settings "
        title="Account settings ">
        <span class="octicon octicon-tools"></span>
      </a>
    </li>
    <li>
      <a class="tooltipped downwards" href="/logout" data-method="post" id="logout" title="Sign out" aria-label="Sign out">
        <span class="octicon octicon-log-out"></span>
      </a>
    </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="angular-ui/bootstrap">This repository</span>
    </li>
      <li>
        <a href="/angular-ui/bootstrap/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

      




          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="UMP1Nwk3eNFtPHFndc4NZNE220Z0ukUye4XluzTx1Zk=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="6094683" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/angular-ui/bootstrap/watchers">
        407
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">
    <a href="/angular-ui/bootstrap/unstar"
      class="minibutton with-count js-toggler-target star-button starred upwards"
      title="Unstar this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
    </a>

    <a href="/angular-ui/bootstrap/star"
      class="minibutton with-count js-toggler-target star-button unstarred upwards"
      title="Star this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star"></span><span class="text">Star</span>
    </a>

      <a class="social-count js-social-count" href="/angular-ui/bootstrap/stargazers">
        3,807
      </a>
  </div>

  </li>


        <li>
          <a href="/angular-ui/bootstrap/fork" class="minibutton with-count js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="nofollow" data-method="post">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/angular-ui/bootstrap/network" class="social-count">2,315</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/angular-ui" class="url fn" itemprop="url" rel="author"><span itemprop="title">angular-ui</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/angular-ui/bootstrap" class="js-current-repository js-repo-home-link">bootstrap</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      

      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped leftwards" title="Code">
        <a href="/angular-ui/bootstrap/tree/gh-pages" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /angular-ui/bootstrap/tree/gh-pages">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped leftwards" title="Issues">
          <a href="/angular-ui/bootstrap/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /angular-ui/bootstrap/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>147</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped leftwards" title="Pull Requests">
        <a href="/angular-ui/bootstrap/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /angular-ui/bootstrap/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>36</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped leftwards" title="Wiki">
          <a href="/angular-ui/bootstrap/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_wiki /angular-ui/bootstrap/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped leftwards" title="Pulse">
        <a href="/angular-ui/bootstrap/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /angular-ui/bootstrap/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Graphs">
        <a href="/angular-ui/bootstrap/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /angular-ui/bootstrap/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Network">
        <a href="/angular-ui/bootstrap/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /angular-ui/bootstrap/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/angular-ui/bootstrap.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/angular-ui/bootstrap.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:angular-ui/bootstrap.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="git@github.com:angular-ui/bootstrap.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/angular-ui/bootstrap" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/angular-ui/bootstrap" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="octicon help tooltipped upwards" title="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>


  <a href="github-windows://openRepo/https://github.com/angular-ui/bootstrap" class="minibutton sidebar-button">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/angular-ui/bootstrap/archive/gh-pages.zip"
                   class="minibutton sidebar-button"
                   title="Download this repository as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:3381ed3696d363cd2571664560c7d4c3 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/angular-ui/bootstrap/find/gh-pages" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="gh-pages"
    role="button" aria-label="Switch branches or tags" tabindex="0">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">gh-pages</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/blob/gh-pages/ui-bootstrap-0.10.0.min.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/blob/karma11/ui-bootstrap-0.10.0.min.js"
                 data-name="karma11"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="karma11">karma11</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/blob/master/ui-bootstrap-0.10.0.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/blob/ttip_refactor/ui-bootstrap-0.10.0.min.js"
                 data-name="ttip_refactor"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="ttip_refactor">ttip_refactor</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/tree/0.10.0/ui-bootstrap-0.10.0.min.js"
                 data-name="0.10.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.10.0">0.10.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/tree/0.9.0/ui-bootstrap-0.10.0.min.js"
                 data-name="0.9.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.9.0">0.9.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/tree/0.8.0/ui-bootstrap-0.10.0.min.js"
                 data-name="0.8.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.8.0">0.8.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/tree/0.7.0/ui-bootstrap-0.10.0.min.js"
                 data-name="0.7.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.7.0">0.7.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/tree/0.6.0/ui-bootstrap-0.10.0.min.js"
                 data-name="0.6.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.6.0">0.6.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/tree/0.5.0/ui-bootstrap-0.10.0.min.js"
                 data-name="0.5.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.5.0">0.5.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/tree/0.4.0/ui-bootstrap-0.10.0.min.js"
                 data-name="0.4.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.4.0">0.4.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/tree/0.3.0/ui-bootstrap-0.10.0.min.js"
                 data-name="0.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.3.0">0.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/tree/0.2.0/ui-bootstrap-0.10.0.min.js"
                 data-name="0.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.2.0">0.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/bootstrap/tree/0.1.0/ui-bootstrap-0.10.0.min.js"
                 data-name="0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.1.0">0.1.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/angular-ui/bootstrap/tree/gh-pages" data-branch="gh-pages" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">bootstrap</span></a></span></span><span class="separator"> / </span><strong class="final-path">ui-bootstrap-0.10.0.min.js</strong> <span class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="ui-bootstrap-0.10.0.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://2.gravatar.com/avatar/73cb0ce891d2be76bd0fdb6e14f4c91c?d=https%3A%2F%2Fidenticons.github.com%2F3e938297ba9793abbd9e22175e44baf5.png&amp;r=x&amp;s=140" width="24" />
    <span class="author"><a href="/pkozlowski-opensource" rel="author">pkozlowski-opensource</a></span>
    <time class="js-relative-date" datetime="2014-01-13T12:16:40-08:00" title="2014-01-13 12:16:40">January 13, 2014</time>
    <div class="commit-title">
        <a href="/angular-ui/bootstrap/commit/3910154e129dbf9cc3ca48a2f8aa98695ca13eee" class="message" data-pjax="true" title="chore(release): v0.10.0">chore(release): v0.10.0</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img height="24" src="https://2.gravatar.com/avatar/73cb0ce891d2be76bd0fdb6e14f4c91c?d=https%3A%2F%2Fidenticons.github.com%2F3e938297ba9793abbd9e22175e44baf5.png&amp;r=x&amp;s=140" width="24" />
            <a href="/pkozlowski-opensource">pkozlowski-opensource</a>
          </li>
      </ul>
    </div>
  </div>

<div id="files" class="bubble">
  <div class="file">
    <div class="meta">
      <div class="info">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
          <span>9 lines (8 sloc)</span>
        <span>41.012 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped leftwards"
               href="github-windows://openRepo/https://github.com/angular-ui/bootstrap?branch=gh-pages&amp;filepath=ui-bootstrap-0.10.0.min.js" title="Open this file in GitHub for Windows">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton tooltipped upwards js-update-url-with-hash"
                   title="Clicking this button will automatically fork this project so you can edit the file"
                   href="/angular-ui/bootstrap/edit/gh-pages/ui-bootstrap-0.10.0.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/angular-ui/bootstrap/raw/gh-pages/ui-bootstrap-0.10.0.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/angular-ui/bootstrap/blame/gh-pages/ui-bootstrap-0.10.0.min.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/angular-ui/bootstrap/commits/gh-pages/ui-bootstrap-0.10.0.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger empty-icon tooltipped downwards"
             href="/angular-ui/bootstrap/delete/gh-pages/ui-bootstrap-0.10.0.min.js"
             title="Fork this project and delete file"
             data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm"> * angular-ui-bootstrap</span></div><div class='line' id='LC3'><span class="cm"> * http://angular-ui.github.io/bootstrap/</span></div><div class='line' id='LC4'><br/></div><div class='line' id='LC5'><span class="cm"> * Version: 0.10.0 - 2014-01-13</span></div><div class='line' id='LC6'><span class="cm"> * License: MIT</span></div><div class='line' id='LC7'><span class="cm"> */</span></div><div class='line' id='LC8'><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.bootstrap.transition&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.collapse&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.accordion&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.alert&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.bindHtml&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.buttons&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.carousel&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.position&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.datepicker&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.dropdownToggle&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.modal&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.pagination&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.tooltip&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.popover&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.progressbar&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.rating&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.tabs&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.timepicker&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.typeahead&quot;</span><span class="p">]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.transition&quot;</span><span class="p">,[]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;$transition&quot;</span><span class="p">,[</span><span class="s2">&quot;$q&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">defer</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">animation</span><span class="o">?</span><span class="s2">&quot;animationEndEventName&quot;</span><span class="o">:</span><span class="s2">&quot;transitionEndEventName&quot;</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">d</span><span class="p">)})};</span><span class="k">return</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="nx">b</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">i</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">d</span><span class="p">)}),</span><span class="nx">h</span><span class="p">.</span><span class="nx">promise</span><span class="p">.</span><span class="nx">cancel</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="s2">&quot;Transition cancelled&quot;</span><span class="p">)},</span><span class="nx">h</span><span class="p">.</span><span class="nx">promise</span><span class="p">},</span><span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;trans&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">WebkitTransition</span><span class="o">:</span><span class="s2">&quot;webkitTransitionEnd&quot;</span><span class="p">,</span><span class="nx">MozTransition</span><span class="o">:</span><span class="s2">&quot;transitionend&quot;</span><span class="p">,</span><span class="nx">OTransition</span><span class="o">:</span><span class="s2">&quot;oTransitionEnd&quot;</span><span class="p">,</span><span class="nx">transition</span><span class="o">:</span><span class="s2">&quot;transitionend&quot;</span><span class="p">},</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">WebkitTransition</span><span class="o">:</span><span class="s2">&quot;webkitAnimationEnd&quot;</span><span class="p">,</span><span class="nx">MozTransition</span><span class="o">:</span><span class="s2">&quot;animationend&quot;</span><span class="p">,</span><span class="nx">OTransition</span><span class="o">:</span><span class="s2">&quot;oAnimationEnd&quot;</span><span class="p">,</span><span class="nx">transition</span><span class="o">:</span><span class="s2">&quot;animationend&quot;</span><span class="p">};</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">transitionEndEventName</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">animationEndEventName</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">e</span><span class="p">}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.collapse&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.bootstrap.transition&quot;</span><span class="p">]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;collapse&quot;</span><span class="p">,[</span><span class="s2">&quot;$transition&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="nx">j</span><span class="o">===</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(),</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="nx">k</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;collapse&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;collapsing&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollHeight</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="nx">g</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;collapsing&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;collapse in&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="nx">k</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">});</span><span class="k">else</span><span class="p">{</span><span class="nx">c</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollHeight</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">});{</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">offsetWidth</span><span class="p">}</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;collapse in&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;collapsing&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="nx">i</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;collapsing&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;collapse&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">collapse</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="nx">h</span><span class="p">()</span><span class="o">:</span><span class="nx">f</span><span class="p">()})}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.accordion&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.bootstrap.collapse&quot;</span><span class="p">]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;accordionConfig&quot;</span><span class="p">,{</span><span class="nx">closeOthers</span><span class="o">:!</span><span class="mi">0</span><span class="p">}).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;AccordionController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="s2">&quot;accordionConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">closeOthers</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">closeOthers</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">closeOthers</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">closeOthers</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">!==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">=!</span><span class="mi">1</span><span class="p">)})},</span><span class="k">this</span><span class="p">.</span><span class="nx">addGroup</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeGroup</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="k">this</span><span class="p">.</span><span class="nx">removeGroup</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="mi">1</span><span class="p">)}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;accordion&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;AccordionController&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/accordion/accordion.html&quot;</span><span class="p">}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;accordionGroup&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^accordion&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/accordion/accordion-group.html&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">heading</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">},</span><span class="nx">controller</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">setHeading</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">heading</span><span class="o">=</span><span class="nx">a</span><span class="p">}},</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">addGroup</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">isOpen</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">assign</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">=!!</span><span class="nx">a</span><span class="p">})),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;isOpen&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">closeOthers</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">,</span><span class="nx">a</span><span class="p">)})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;accordionHeading&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">template</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^accordionGroup&quot;</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">setHeading</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(){}))}}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;accordionTransclude&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^accordionGroup&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">accordionTransclude</span><span class="p">]},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">))})}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.alert&quot;</span><span class="p">,[]).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;AlertController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">closeable</span><span class="o">=</span><span class="s2">&quot;close&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="p">}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;alert&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;AlertController&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/alert/alert.html&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">close</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.bindHtml&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;bindHtmlUnsafe&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ng-binding&quot;</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;$binding&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">bindHtmlUnsafe</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bindHtmlUnsafe</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">)})}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.buttons&quot;</span><span class="p">,[]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;buttonConfig&quot;</span><span class="p">,{</span><span class="nx">activeClass</span><span class="o">:</span><span class="s2">&quot;active&quot;</span><span class="p">,</span><span class="nx">toggleEvent</span><span class="o">:</span><span class="s2">&quot;click&quot;</span><span class="p">}).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;ButtonsController&quot;</span><span class="p">,[</span><span class="s2">&quot;buttonConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">activeClass</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">activeClass</span><span class="o">||</span><span class="s2">&quot;active&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">toggleEvent</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toggleEvent</span><span class="o">||</span><span class="s2">&quot;click&quot;</span><span class="p">}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;btnRadio&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;btnRadio&quot;</span><span class="p">,</span><span class="s2">&quot;ngModel&quot;</span><span class="p">],</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;ButtonsController&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">f</span><span class="p">.</span><span class="nx">$render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">,</span><span class="nx">angular</span><span class="p">.</span><span class="nx">equals</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">btnRadio</span><span class="p">)))},</span><span class="nx">b</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">toggleEvent</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">btnRadio</span><span class="p">)),</span><span class="nx">f</span><span class="p">.</span><span class="nx">$render</span><span class="p">()})})}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;btnCheckbox&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;btnCheckbox&quot;</span><span class="p">,</span><span class="s2">&quot;ngModel&quot;</span><span class="p">],</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;ButtonsController&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="k">return</span> <span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">btnCheckboxTrue</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="k">return</span> <span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">btnCheckboxFalse</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="nx">c</span><span class="p">}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">i</span><span class="p">.</span><span class="nx">$render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">,</span><span class="nx">angular</span><span class="p">.</span><span class="nx">equals</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">,</span><span class="nx">e</span><span class="p">()))},</span><span class="nx">b</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">toggleEvent</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">()</span><span class="o">:</span><span class="nx">e</span><span class="p">()),</span><span class="nx">i</span><span class="p">.</span><span class="nx">$render</span><span class="p">()})})}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.carousel&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.bootstrap.transition&quot;</span><span class="p">]).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;CarouselController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="s2">&quot;$transition&quot;</span><span class="p">,</span><span class="s2">&quot;$q&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="nx">e</span><span class="p">();</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=+</span><span class="nx">a</span><span class="p">.</span><span class="nx">interval</span><span class="p">;</span><span class="o">!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="p">(),</span><span class="nx">d</span><span class="p">())</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">pause</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">slides</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="p">.</span><span class="nx">currentSlide</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">currentSlide</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">noTransition</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$element</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">$element</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">f</span><span class="p">);{</span><span class="nx">e</span><span class="p">.</span><span class="nx">$element</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">offsetWidth</span><span class="p">}</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">direction</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">entering</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">leaving</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">active</span><span class="o">:!</span><span class="mi">1</span><span class="p">})}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">e</span><span class="p">,{</span><span class="nx">direction</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">active</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">entering</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">currentSlide</span><span class="o">||</span><span class="p">{},{</span><span class="nx">direction</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">leaving</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$currentTransition</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">$element</span><span class="p">,{}),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$currentTransition</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)})}(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">currentSlide</span><span class="p">)}</span><span class="k">else</span> <span class="nx">h</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">currentSlide</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">currentSlide</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">m</span><span class="p">,</span><span class="nx">d</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">direction</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">active</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">leaving</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">entering</span><span class="o">:!</span><span class="mi">1</span><span class="p">}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">c</span><span class="o">||</span><span class="p">{},{</span><span class="nx">direction</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">active</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">leaving</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">entering</span><span class="o">:!</span><span class="mi">1</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$currentTransition</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">k</span><span class="o">?</span><span class="s2">&quot;next&quot;</span><span class="o">:</span><span class="s2">&quot;prev&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">!==</span><span class="nx">i</span><span class="p">.</span><span class="nx">currentSlide</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$currentTransition</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$currentTransition</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(),</span><span class="nx">b</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="o">:</span><span class="nx">g</span><span class="p">())},</span><span class="nx">a</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">i</span><span class="p">.</span><span class="nx">indexOfSlide</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">j</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">k</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">$currentTransition</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;next&quot;</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">prev</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">k</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">k</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">$currentTransition</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;prev&quot;</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">isActive</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">currentSlide</span><span class="o">===</span><span class="nx">a</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">slides</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">j</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;interval&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">play</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="o">||</span><span class="p">(</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">())},</span><span class="nx">a</span><span class="p">.</span><span class="nx">pause</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">noPause</span><span class="o">||</span><span class="p">(</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">())},</span><span class="nx">i</span><span class="p">.</span><span class="nx">addSlide</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">$element</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="mi">1</span><span class="o">===</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span><span class="mi">1</span><span class="o">==</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">play</span><span class="p">())</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">i</span><span class="p">.</span><span class="nx">removeSlide</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="o">?</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">:</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">--</span><span class="p">}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;carousel&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;CarouselController&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;carousel&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/carousel/carousel.html&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">interval</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">noTransition</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">noPause</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;slide&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^carousel&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/carousel/slide.html&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{},</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">active</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">active</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">assign</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span><span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="p">)),</span><span class="nx">a</span><span class="p">})}</span><span class="nx">e</span><span class="p">.</span><span class="nx">addSlide</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeSlide</span><span class="p">(</span><span class="nx">b</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;active&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">b</span><span class="p">)})}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.position&quot;</span><span class="p">,[]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;$position&quot;</span><span class="p">,[</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">)[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">c</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;static&quot;</span><span class="o">===</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;position&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;static&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetParent</span><span class="o">||</span><span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">);)</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">||</span><span class="nx">c</span><span class="p">};</span><span class="k">return</span><span class="p">{</span><span class="nx">position</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">f</span><span class="o">!=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">f</span><span class="p">)),</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="o">+=</span><span class="nx">f</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">+=</span><span class="nx">f</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getBoundingClientRect</span><span class="p">();</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">),</span><span class="nx">height</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetHeight&quot;</span><span class="p">),</span><span class="nx">top</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="p">}},</span><span class="nx">offset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getBoundingClientRect</span><span class="p">();</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">),</span><span class="nx">height</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetHeight&quot;</span><span class="p">),</span><span class="nx">top</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">),</span><span class="nx">left</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">)}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.datepicker&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.bootstrap.position&quot;</span><span class="p">]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;datepickerConfig&quot;</span><span class="p">,{</span><span class="nx">dayFormat</span><span class="o">:</span><span class="s2">&quot;dd&quot;</span><span class="p">,</span><span class="nx">monthFormat</span><span class="o">:</span><span class="s2">&quot;MMMM&quot;</span><span class="p">,</span><span class="nx">yearFormat</span><span class="o">:</span><span class="s2">&quot;yyyy&quot;</span><span class="p">,</span><span class="nx">dayHeaderFormat</span><span class="o">:</span><span class="s2">&quot;EEE&quot;</span><span class="p">,</span><span class="nx">dayTitleFormat</span><span class="o">:</span><span class="s2">&quot;MMMM yyyy&quot;</span><span class="p">,</span><span class="nx">monthTitleFormat</span><span class="o">:</span><span class="s2">&quot;yyyy&quot;</span><span class="p">,</span><span class="nx">showWeeks</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">startingDay</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">yearRange</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">minDate</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">maxDate</span><span class="o">:</span><span class="kc">null</span><span class="p">}).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;DatepickerController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="s2">&quot;dateFilter&quot;</span><span class="p">,</span><span class="s2">&quot;datepickerConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="nx">getDate</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;)</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">date</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">label</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">selected</span><span class="o">:!!</span><span class="nx">d</span><span class="p">,</span><span class="nx">secondary</span><span class="o">:!!</span><span class="nx">e</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="nx">day</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dayFormat</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dayFormat</span><span class="p">),</span><span class="nx">month</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">monthFormat</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">monthFormat</span><span class="p">),</span><span class="nx">year</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">yearFormat</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">yearFormat</span><span class="p">),</span><span class="nx">dayHeader</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dayHeaderFormat</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dayHeaderFormat</span><span class="p">),</span><span class="nx">dayTitle</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dayTitleFormat</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dayTitleFormat</span><span class="p">),</span><span class="nx">monthTitle</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">monthTitleFormat</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">monthTitleFormat</span><span class="p">)},</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">startingDay</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">startingDay</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">yearRange</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">yearRange</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">minDate</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">minDate</span><span class="o">?</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">minDate</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">maxDate</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">maxDate</span><span class="o">?</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">maxDate</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">modes</span><span class="o">=</span><span class="p">[{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;day&quot;</span><span class="p">,</span><span class="nx">getVisibleDates</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">(),</span><span class="nx">k</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">j</span><span class="o">-</span><span class="nx">k</span><span class="p">.</span><span class="nx">getDay</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="mi">7</span><span class="o">-</span><span class="nx">l</span><span class="o">:-</span><span class="nx">l</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="o">-</span><span class="nx">m</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">o</span><span class="o">+=</span><span class="nx">m</span><span class="p">),</span><span class="nx">o</span><span class="o">+=</span><span class="nx">f</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">o</span><span class="o">+=</span><span class="p">(</span><span class="mi">7</span><span class="o">-</span><span class="nx">o</span><span class="o">%</span><span class="mi">7</span><span class="p">)</span><span class="o">%</span><span class="mi">7</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="mi">7</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="o">&gt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">r</span><span class="p">]);</span><span class="nx">p</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">day</span><span class="p">,</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">===</span><span class="nx">s</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">===</span><span class="nx">s</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span><span class="o">===</span><span class="nx">s</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">s</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">!==</span><span class="nx">e</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">7</span><span class="o">&gt;</span><span class="nx">t</span><span class="p">;</span><span class="nx">t</span><span class="o">++</span><span class="p">)</span><span class="nx">q</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">t</span><span class="p">].</span><span class="nx">date</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">dayHeader</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">objects</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">title</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">dayTitle</span><span class="p">),</span><span class="nx">labels</span><span class="o">:</span><span class="nx">q</span><span class="p">}},</span><span class="nx">compare</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">getDate</span><span class="p">())</span><span class="o">-</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">getDate</span><span class="p">())},</span><span class="nx">split</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="nx">step</span><span class="o">:</span><span class="p">{</span><span class="nx">months</span><span class="o">:</span><span class="mi">1</span><span class="p">}},{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;month&quot;</span><span class="p">,</span><span class="nx">getVisibleDates</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="mi">12</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">12</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">month</span><span class="p">,</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span><span class="o">===</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span><span class="p">{</span><span class="nx">objects</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">title</span><span class="o">:</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">monthTitle</span><span class="p">)}},</span><span class="nx">compare</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">())</span><span class="o">-</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">())},</span><span class="nx">split</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">step</span><span class="o">:</span><span class="p">{</span><span class="nx">years</span><span class="o">:</span><span class="mi">1</span><span class="p">}},{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;year&quot;</span><span class="p">,</span><span class="nx">getVisibleDates</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">((</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">k</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">*</span><span class="nx">k</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">year</span><span class="p">,</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">())}</span><span class="k">return</span><span class="p">{</span><span class="nx">objects</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">title</span><span class="o">:</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">label</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">k</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">label</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; - &quot;</span><span class="p">)}},</span><span class="nx">compare</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()},</span><span class="nx">split</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">step</span><span class="o">:</span><span class="p">{</span><span class="nx">years</span><span class="o">:</span><span class="nx">k</span><span class="p">}}],</span><span class="k">this</span><span class="p">.</span><span class="nx">isDisabled</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">modes</span><span class="p">[</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">minDate</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">compare</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">minDate</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">maxDate</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">compare</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">maxDate</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">dateDisabled</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dateDisabled</span><span class="p">({</span><span class="nx">date</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">mode</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="p">})}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;datepicker&quot;</span><span class="p">,[</span><span class="s2">&quot;dateFilter&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;datepickerConfig&quot;</span><span class="p">,</span><span class="s2">&quot;$log&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/datepicker/datepicker.html&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">dateDisabled</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">require</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;datepicker&quot;</span><span class="p">,</span><span class="s2">&quot;?^ngModel&quot;</span><span class="p">],</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;DatepickerController&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">showWeekNumbers</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">;)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">$modelValue</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">),</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s1">&#39;Datepicker directive: &quot;ng-model&quot; value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.&#39;</span><span class="p">))</span><span class="o">:</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">c</span><span class="p">)),</span><span class="nx">n</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;date&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">modes</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getVisibleDates</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">objects</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">isDisabled</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">date</span><span class="p">,</span><span class="nx">o</span><span class="p">)}),</span><span class="nx">n</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;date-disabled&quot;</span><span class="p">,</span><span class="o">!</span><span class="nx">c</span><span class="o">||!</span><span class="nx">m</span><span class="p">.</span><span class="nx">isDisabled</span><span class="p">(</span><span class="nx">c</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">rows</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">objects</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">split</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">labels</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">labels</span><span class="o">||</span><span class="p">[],</span><span class="nx">a</span><span class="p">.</span><span class="nx">title</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">title</span><span class="p">}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">(),</span><span class="nx">j</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span><span class="o">+</span><span class="mi">4</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">getDay</span><span class="p">()</span><span class="o">||</span><span class="mi">7</span><span class="p">));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getTime</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">setMonth</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">((</span><span class="nx">c</span><span class="o">-</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="mi">864</span><span class="nx">e5</span><span class="p">)</span><span class="o">/</span><span class="mi">7</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">}</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">showWeeks</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">showWeeks</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">showWeeks</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="o">=!!</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">()})</span><span class="o">:</span><span class="nx">h</span><span class="p">(),</span><span class="nx">f</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">min</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">m</span><span class="p">.</span><span class="nx">minDate</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">j</span><span class="p">()}),</span><span class="nx">f</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">max</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">m</span><span class="p">.</span><span class="nx">maxDate</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">j</span><span class="p">()}),</span><span class="nx">n</span><span class="p">.</span><span class="nx">$render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">j</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">$modelValue</span><span class="o">?</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">setFullYear</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()),</span><span class="nx">n</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">j</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span> <span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">o</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">move</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">modes</span><span class="p">[</span><span class="nx">o</span><span class="p">].</span><span class="nx">step</span><span class="p">;</span><span class="nx">p</span><span class="p">.</span><span class="nx">setMonth</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="nx">a</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">months</span><span class="o">||</span><span class="mi">0</span><span class="p">)),</span><span class="nx">p</span><span class="p">.</span><span class="nx">setFullYear</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()</span><span class="o">+</span><span class="nx">a</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">years</span><span class="o">||</span><span class="mi">0</span><span class="p">)),</span><span class="nx">j</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">toggleMode</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="p">((</span><span class="nx">o</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="nx">m</span><span class="p">.</span><span class="nx">modes</span><span class="p">.</span><span class="nx">length</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">getWeekNumber</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">===</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">showWeekNumbers</span><span class="o">&amp;&amp;</span><span class="mi">7</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">l</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">date</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">}}}}}]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;datepickerPopupConfig&quot;</span><span class="p">,{</span><span class="nx">dateFormat</span><span class="o">:</span><span class="s2">&quot;yyyy-MM-dd&quot;</span><span class="p">,</span><span class="nx">currentText</span><span class="o">:</span><span class="s2">&quot;Today&quot;</span><span class="p">,</span><span class="nx">toggleWeeksText</span><span class="o">:</span><span class="s2">&quot;Weeks&quot;</span><span class="p">,</span><span class="nx">clearText</span><span class="o">:</span><span class="s2">&quot;Clear&quot;</span><span class="p">,</span><span class="nx">closeText</span><span class="o">:</span><span class="s2">&quot;Done&quot;</span><span class="p">,</span><span class="nx">closeOnDateSelection</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">appendToBody</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">showButtonBar</span><span class="o">:!</span><span class="mi">0</span><span class="p">}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;datepickerPopup&quot;</span><span class="p">,[</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$position&quot;</span><span class="p">,</span><span class="s2">&quot;dateFilter&quot;</span><span class="p">,</span><span class="s2">&quot;datepickerPopupConfig&quot;</span><span class="p">,</span><span class="s2">&quot;datepickerConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;ngModel&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">){</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">u</span><span class="o">?</span><span class="nx">u</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="o">!!</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">=!!</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDate</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;date&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nb">isNaN</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;date&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;date&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;date&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">}</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;date&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">}),</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">d</span><span class="o">||</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(){</span><span class="nx">q</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="nx">s</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">position</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetHeight&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">$new</span><span class="p">(),</span><span class="nx">r</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">closeOnDateSelection</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">closeOnDateSelection</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">closeOnDateSelection</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">datepickerAppendToBody</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">datepickerAppendToBody</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">appendToBody</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;datepickerPopup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">dateFormat</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">$render</span><span class="p">()}),</span><span class="nx">q</span><span class="p">.</span><span class="nx">showButtonBar</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">showButtonBar</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">showButtonBar</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">showButtonBar</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">C</span><span class="p">.</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">q</span><span class="p">.</span><span class="nx">$destroy</span><span class="p">()}),</span><span class="nx">j</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;currentText&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="p">.</span><span class="nx">currentText</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">currentText</span><span class="p">}),</span><span class="nx">j</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;toggleWeeksText&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="p">.</span><span class="nx">toggleWeeksText</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">toggleWeeksText</span><span class="p">}),</span><span class="nx">j</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;clearText&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="p">.</span><span class="nx">clearText</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">clearText</span><span class="p">}),</span><span class="nx">j</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;closeText&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="p">.</span><span class="nx">closeText</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">closeText</span><span class="p">});</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">isOpen</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">assign</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">=!!</span><span class="nx">a</span><span class="p">})),</span><span class="nx">q</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">=</span><span class="nx">t</span><span class="o">?</span><span class="nx">t</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">!==</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)})},</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">q</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)})},</span><span class="nx">x</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s2">&quot;&lt;div datepicker-popup-wrap&gt;&lt;div datepicker&gt;&lt;/div&gt;&lt;/div&gt;&quot;</span><span class="p">);</span><span class="nx">x</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="s2">&quot;ng-model&quot;</span><span class="o">:</span><span class="s2">&quot;date&quot;</span><span class="p">,</span><span class="s2">&quot;ng-change&quot;</span><span class="o">:</span><span class="s2">&quot;dateSelection()&quot;</span><span class="p">});</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">children</span><span class="p">()[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">z</span><span class="o">=</span><span class="p">{};</span><span class="nx">j</span><span class="p">.</span><span class="nx">datepickerOptions</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">z</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">datepickerOptions</span><span class="p">),</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">z</span><span class="p">))),</span><span class="nx">k</span><span class="p">.</span><span class="nx">$parsers</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">dateSelection</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">date</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">date</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">$render</span><span class="p">(),</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="nx">i</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;input change keyup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">q</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">q</span><span class="p">.</span><span class="nx">date</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">})}),</span><span class="nx">k</span><span class="p">.</span><span class="nx">$render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">$viewValue</span><span class="o">?</span><span class="nx">e</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">$viewValue</span><span class="p">,</span><span class="nx">p</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">i</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">date</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">},</span><span class="nx">n</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="s2">&quot;min&quot;</span><span class="p">),</span><span class="nx">n</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="s2">&quot;max&quot;</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">showWeeks</span><span class="o">?</span><span class="nx">n</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">showWeeks</span><span class="p">,</span><span class="s2">&quot;showWeeks&quot;</span><span class="p">,</span><span class="s2">&quot;show-weeks&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">showWeeks</span><span class="o">=</span><span class="s2">&quot;show-weeks&quot;</span><span class="k">in</span> <span class="nx">z</span><span class="o">?</span><span class="nx">z</span><span class="p">[</span><span class="s2">&quot;show-weeks&quot;</span><span class="p">]</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">showWeeks</span><span class="p">,</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;show-weeks&quot;</span><span class="p">,</span><span class="s2">&quot;showWeeks&quot;</span><span class="p">)),</span><span class="nx">j</span><span class="p">.</span><span class="nx">dateDisabled</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;date-disabled&quot;</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">dateDisabled</span><span class="p">);</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">B</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;isOpen&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">o</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="nx">w</span><span class="p">),</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">focus</span><span class="p">(),</span><span class="nx">A</span><span class="o">=!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="nx">w</span><span class="p">),</span><span class="nx">B</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">q</span><span class="p">.</span><span class="nx">today</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">q</span><span class="p">.</span><span class="nx">dateSelection</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)},</span><span class="nx">q</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">q</span><span class="p">.</span><span class="nx">dateSelection</span><span class="p">(</span><span class="kc">null</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">x</span><span class="p">)(</span><span class="nx">q</span><span class="p">);</span><span class="nx">s</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">C</span><span class="p">)}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;datepickerPopupWrap&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/datepicker/popup.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()})}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.dropdownToggle&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;dropdownToggle&quot;</span><span class="p">,[</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$location&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;CA&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;$location.path&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">()}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">()}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="o">===</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">(),</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(),</span><span class="nx">f</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;open&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()),</span><span class="nx">a</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;open&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">))})}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.modal&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.bootstrap.transition&quot;</span><span class="p">]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;$$stackedMap&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">createNew</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span><span class="p">{</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">key</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">c</span><span class="p">})},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">key</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]},</span><span class="nx">keys</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">key</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">top</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">key</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">removeTop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">length</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">}}}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;modalBackdrop&quot;</span><span class="p">,[</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/modal/backdrop.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">animate</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">animate</span><span class="o">=!</span><span class="mi">0</span><span class="p">})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;modalWindow&quot;</span><span class="p">,[</span><span class="s2">&quot;$modalStack&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">index</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">animate</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">},</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/modal/window.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">windowClass</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">windowClass</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">animate</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">focus</span><span class="p">()}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getTop</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">backdrop</span><span class="o">&amp;&amp;</span><span class="s2">&quot;static&quot;</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">backdrop</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentTarget</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">dismiss</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="s2">&quot;backdrop click&quot;</span><span class="p">))}}}}]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;$modalStack&quot;</span><span class="p">,[</span><span class="s2">&quot;$transition&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="s2">&quot;$$stackedMap&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">keys</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]).</span><span class="nx">value</span><span class="p">.</span><span class="nx">backdrop</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">value</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">j</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">modalDomEl</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">modalScope</span><span class="p">,</span><span class="mi">300</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">()</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">g</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">j</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="mi">150</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$destroy</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">}),</span><span class="nx">k</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="nx">g</span><span class="p">.</span><span class="nx">done</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">done</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">())}</span><span class="nx">d</span><span class="p">.</span><span class="nx">animate</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">transitionEndEventName</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">g</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$apply</span><span class="p">()})}</span><span class="k">else</span> <span class="nx">b</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">0</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="s2">&quot;modal-open&quot;</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">createNew</span><span class="p">(),</span><span class="nx">o</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="mi">27</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">top</span><span class="p">(),</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">keyboard</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">dismiss</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">)}))}),</span><span class="nx">o</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">deferred</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">deferred</span><span class="p">,</span><span class="nx">modalScope</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">scope</span><span class="p">,</span><span class="nx">backdrop</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">backdrop</span><span class="p">,</span><span class="nx">keyboard</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyboard</span><span class="p">});</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">();</span><span class="nx">h</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">$new</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;div modal-backdrop&gt;&lt;/div&gt;&quot;</span><span class="p">)(</span><span class="nx">l</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">k</span><span class="p">));</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s2">&quot;&lt;div modal-window&gt;&lt;/div&gt;&quot;</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;window-class&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">windowClass</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;index&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;animate&quot;</span><span class="p">,</span><span class="s2">&quot;animate&quot;</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">content</span><span class="p">);</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">i</span><span class="p">)(</span><span class="nx">b</span><span class="p">.</span><span class="nx">scope</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">top</span><span class="p">().</span><span class="nx">value</span><span class="p">.</span><span class="nx">modalDomEl</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">m</span><span class="p">)},</span><span class="nx">o</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">value</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">o</span><span class="p">.</span><span class="nx">dismiss</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">value</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">o</span><span class="p">.</span><span class="nx">dismissAll</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getTop</span><span class="p">();</span><span class="nx">b</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">dismiss</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getTop</span><span class="p">()},</span><span class="nx">o</span><span class="p">.</span><span class="nx">getTop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">n</span><span class="p">.</span><span class="nx">top</span><span class="p">()},</span><span class="nx">o</span><span class="p">}]).</span><span class="nx">provider</span><span class="p">(</span><span class="s2">&quot;$modal&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">options</span><span class="o">:</span><span class="p">{</span><span class="nx">backdrop</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">keyboard</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">$get</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;$injector&quot;</span><span class="p">,</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="s2">&quot;$q&quot;</span><span class="p">,</span><span class="s2">&quot;$http&quot;</span><span class="p">,</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="s2">&quot;$controller&quot;</span><span class="p">,</span><span class="s2">&quot;$modalStack&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">template</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">template</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">templateUrl</span><span class="p">,{</span><span class="nx">cache</span><span class="o">:</span><span class="nx">f</span><span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">invoke</span><span class="p">(</span><span class="nx">a</span><span class="p">)))}),</span><span class="nx">c</span><span class="p">}</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">defer</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">defer</span><span class="p">(),</span><span class="nx">k</span><span class="o">=</span><span class="p">{</span><span class="nx">result</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">promise</span><span class="p">,</span><span class="nx">opened</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">promise</span><span class="p">,</span><span class="nx">close</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">close</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">dismiss</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">dismiss</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">a</span><span class="p">)}};</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="o">||</span><span class="p">{},</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">template</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">templateUrl</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;One of template or templateUrl options is required.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">all</span><span class="p">([</span><span class="nx">i</span><span class="p">(</span><span class="nx">b</span><span class="p">)].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">j</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="p">)));</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">scope</span><span class="o">||</span><span class="nx">c</span><span class="p">).</span><span class="nx">$new</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">$close</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">close</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">$dismiss</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">dismiss</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">{},</span><span class="nx">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">controller</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">$scope</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">$modalInstance</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">i</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">]}),</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">controller</span><span class="p">,</span><span class="nx">i</span><span class="p">)),</span><span class="nx">h</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">k</span><span class="p">,{</span><span class="nx">scope</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">deferred</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">content</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">backdrop</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">backdrop</span><span class="p">,</span><span class="nx">keyboard</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyboard</span><span class="p">,</span><span class="nx">windowClass</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">windowClass</span><span class="p">})},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">l</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">k</span><span class="p">},</span><span class="nx">k</span><span class="p">}]};</span><span class="k">return</span> <span class="nx">a</span><span class="p">}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.pagination&quot;</span><span class="p">,[]).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;PaginationController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;$interpolate&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">numPages</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">numPages</span><span class="p">).</span><span class="nx">assign</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">calculateTotalPages</span><span class="p">()})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="o">=</span><span class="nx">d</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">noPrevious</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">noNext</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">isActive</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="o">===</span><span class="nx">a</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateTotalPages</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalItems</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="p">);</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">)(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">page</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pages</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPages</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="p">))},</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectPage</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">isActive</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">page</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">onSelectPage</span><span class="p">({</span><span class="nx">page</span><span class="o">:</span><span class="nx">b</span><span class="p">}))},</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;page&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">render</span><span class="p">()}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;totalItems&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">calculateTotalPages</span><span class="p">()}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;totalPages&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">page</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectPage</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">render</span><span class="p">()})}]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;paginationConfig&quot;</span><span class="p">,{</span><span class="nx">itemsPerPage</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">boundaryLinks</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">directionLinks</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">firstText</span><span class="o">:</span><span class="s2">&quot;First&quot;</span><span class="p">,</span><span class="nx">previousText</span><span class="o">:</span><span class="s2">&quot;Previous&quot;</span><span class="p">,</span><span class="nx">nextText</span><span class="o">:</span><span class="s2">&quot;Next&quot;</span><span class="p">,</span><span class="nx">lastText</span><span class="o">:</span><span class="s2">&quot;Last&quot;</span><span class="p">,</span><span class="nx">rotate</span><span class="o">:!</span><span class="mi">0</span><span class="p">}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;pagination&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;paginationConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">page</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">totalItems</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">onSelectPage</span><span class="o">:</span><span class="s2">&quot; &amp;&quot;</span><span class="p">},</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;PaginationController&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/pagination/pagination.html&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">number</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">active</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">disabled</span><span class="o">:</span><span class="nx">d</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">boundaryLinks</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">boundaryLinks</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">directionLinks</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">directionLinks</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">firstText</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">previousText</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">nextText</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">nextText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">lastText</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">lastText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">rotate</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">rotate</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">maxSize</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">maxSize</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">render</span><span class="p">()}),</span><span class="nx">f</span><span class="p">.</span><span class="nx">getPages</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">h</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="nx">h</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="nx">h</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="nx">h</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">)));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="nx">q</span><span class="p">;</span><span class="nx">q</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">isActive</span><span class="p">(</span><span class="nx">q</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;...&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">s</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;...&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">noPrevious</span><span class="p">());</span><span class="nx">c</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">u</span><span class="p">);</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">noNext</span><span class="p">());</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">v</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">noPrevious</span><span class="p">());</span><span class="nx">c</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">w</span><span class="p">);</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">noNext</span><span class="p">());</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">x</span><span class="p">)}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}}}}]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;pagerConfig&quot;</span><span class="p">,{</span><span class="nx">itemsPerPage</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">previousText</span><span class="o">:</span><span class="s2">&quot;Â« Previous&quot;</span><span class="p">,</span><span class="nx">nextText</span><span class="o">:</span><span class="s2">&quot;Next Â»&quot;</span><span class="p">,</span><span class="nx">align</span><span class="o">:!</span><span class="mi">0</span><span class="p">}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;pager&quot;</span><span class="p">,[</span><span class="s2">&quot;pagerConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">page</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">totalItems</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">onSelectPage</span><span class="o">:</span><span class="s2">&quot; &amp;&quot;</span><span class="p">},</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;PaginationController&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/pagination/pager.html&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">number</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">disabled</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">previous</span><span class="o">:</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">,</span><span class="nx">next</span><span class="o">:</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">previousText</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">nextText</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">align</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">align</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">getPages</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">noPrevious</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">noNext</span><span class="p">(),</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)]}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.tooltip&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.bootstrap.position&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.bindHtml&quot;</span><span class="p">]).</span><span class="nx">provider</span><span class="p">(</span><span class="s2">&quot;$tooltip&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/[A-Z]/g</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;-&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()})}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">placement</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">animation</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">popupDelay</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">mouseenter</span><span class="o">:</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="nx">click</span><span class="o">:</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">focus</span><span class="o">:</span><span class="s2">&quot;blur&quot;</span><span class="p">},</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">setTriggers</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">$get</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$position&quot;</span><span class="p">,</span><span class="s2">&quot;$interpolate&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">trigger</span><span class="o">||</span><span class="nx">m</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">show</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">hide</span><span class="o">:</span><span class="nx">d</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">startSymbol</span><span class="p">(),</span><span class="nx">r</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">endSymbol</span><span class="p">(),</span><span class="nx">s</span><span class="o">=</span><span class="s2">&quot;&lt;div &quot;</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="s1">&#39;-popup title=&quot;&#39;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;tt_title&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s1">&#39;&quot; content=&quot;&#39;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;tt_content&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s1">&#39;&quot; placement=&quot;&#39;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;tt_placement&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s1">&#39;&quot; animation=&quot;tt_animation&quot; is-open=&quot;tt_isOpen&quot;&gt;&lt;/div&gt;&#39;</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">?</span><span class="nx">m</span><span class="p">()</span><span class="o">:</span><span class="nx">k</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(){(</span><span class="o">!</span><span class="nx">z</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Enable&quot;</span><span class="p">]))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_popupDelay</span><span class="o">?</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_popupDelay</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">v</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">()}))</span><span class="o">:</span><span class="nx">p</span><span class="p">()())}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">q</span><span class="p">()})}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">tt_content</span><span class="o">?</span><span class="p">(</span><span class="nx">r</span><span class="p">(),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">u</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;block&quot;</span><span class="p">}),</span><span class="nx">w</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">A</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">$digest</span><span class="p">(),</span><span class="nx">A</span><span class="p">)</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">v</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_animation</span><span class="o">?</span><span class="nx">u</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="mi">500</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(){</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">(),</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(){}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$digest</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(){</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">t</span><span class="o">=</span><span class="kc">null</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">appendToBody</span><span class="p">)</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">appendToBody</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">),</span><span class="nx">y</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Enable&quot;</span><span class="p">]),</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">w</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">position</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetHeight&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_placement</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">};</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;bottom&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">};</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">d</span><span class="p">};</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">}}</span><span class="nx">f</span><span class="p">.</span><span class="nx">top</span><span class="o">+=</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">left</span><span class="o">+=</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">f</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_content</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">()}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Title&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_title</span><span class="o">=</span><span class="nx">a</span><span class="p">}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Placement&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_placement</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">placement</span><span class="p">}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;PopupDelay&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_popupDelay</span><span class="o">=</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">popupDelay</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">show</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">hide</span><span class="p">,</span><span class="nx">m</span><span class="p">))};</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Trigger&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">B</span><span class="p">(),</span><span class="nx">x</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">x</span><span class="p">.</span><span class="nx">show</span><span class="o">===</span><span class="nx">x</span><span class="p">.</span><span class="nx">hide</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">show</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">show</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">hide</span><span class="p">,</span><span class="nx">m</span><span class="p">)),</span><span class="nx">y</span><span class="o">=!</span><span class="mi">0</span><span class="p">});</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Animation&quot;</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_animation</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">?!!</span><span class="nx">C</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">animation</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;AppendToBody&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">w</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">)(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">w</span><span class="p">}),</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$locationChangeSuccess&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">()}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">u</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">v</span><span class="p">),</span><span class="nx">B</span><span class="p">(),</span><span class="nx">s</span><span class="p">()})}}}}}]}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tooltipPopup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">placement</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">animation</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">,</span><span class="nx">isOpen</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/tooltip/tooltip-popup.html&quot;</span><span class="p">}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tooltip&quot;</span><span class="p">,[</span><span class="s2">&quot;$tooltip&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="s2">&quot;tooltip&quot;</span><span class="p">,</span><span class="s2">&quot;tooltip&quot;</span><span class="p">,</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">)}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tooltipHtmlUnsafePopup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">placement</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">animation</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">,</span><span class="nx">isOpen</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/tooltip/tooltip-html-unsafe-popup.html&quot;</span><span class="p">}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tooltipHtmlUnsafe&quot;</span><span class="p">,[</span><span class="s2">&quot;$tooltip&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="s2">&quot;tooltipHtmlUnsafe&quot;</span><span class="p">,</span><span class="s2">&quot;tooltip&quot;</span><span class="p">,</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.popover&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.bootstrap.tooltip&quot;</span><span class="p">]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;popoverPopup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">title</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">placement</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">animation</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">,</span><span class="nx">isOpen</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/popover/popover.html&quot;</span><span class="p">}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;popover&quot;</span><span class="p">,[</span><span class="s2">&quot;$tooltip&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="s2">&quot;popover&quot;</span><span class="p">,</span><span class="s2">&quot;popover&quot;</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.progressbar&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.bootstrap.transition&quot;</span><span class="p">]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;progressConfig&quot;</span><span class="p">,{</span><span class="nx">animate</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="mi">100</span><span class="p">}).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;ProgressController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="s2">&quot;progressConfig&quot;</span><span class="p">,</span><span class="s2">&quot;$transition&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">animate</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">animate</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">animate</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">addBar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$index</span><span class="p">;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">value</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeBar</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPercentage</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getPercentage</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;%&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;%&quot;</span><span class="p">}))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">transition</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;%&quot;</span><span class="p">})},</span><span class="k">this</span><span class="p">.</span><span class="nx">removeBar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">getPercentage</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="nx">a</span><span class="o">/</span><span class="nx">g</span><span class="p">)}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;progress&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;ProgressController&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;progress&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{},</span><span class="nx">template</span><span class="o">:</span><span class="s1">&#39;&lt;div class=&quot;progress&quot; ng-transclude&gt;&lt;/div&gt;&#39;</span><span class="p">}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;bar&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^progress&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/progressbar/bar.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">addBar</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;progressbar&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;ProgressController&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/progressbar/progressbar.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">addBar</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">children</span><span class="p">()[</span><span class="mi">0</span><span class="p">]))}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.rating&quot;</span><span class="p">,[]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;ratingConfig&quot;</span><span class="p">,{</span><span class="nx">max</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">stateOn</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">stateOff</span><span class="o">:</span><span class="kc">null</span><span class="p">}).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;RatingController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;ratingConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">maxRange</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">stateOn</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stateOn</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stateOn</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">stateOn</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">stateOff</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stateOff</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stateOff</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">stateOff</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">createRateObjects</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">stateOn</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stateOn</span><span class="p">,</span><span class="nx">stateOff</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stateOff</span><span class="p">},</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">index</span><span class="o">:</span><span class="nx">c</span><span class="p">},</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">range</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">ratingStates</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">createRateObjects</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">ratingStates</span><span class="p">)))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">createRateObjects</span><span class="p">(</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maxRange</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">rate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">readonly</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">b</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">enter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">readonly</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">val</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">onHover</span><span class="p">({</span><span class="nx">value</span><span class="o">:</span><span class="nx">b</span><span class="p">})},</span><span class="nx">a</span><span class="p">.</span><span class="nx">reset</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">val</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">onLeave</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">val</span><span class="o">=</span><span class="nx">b</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">readonly</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">readonly</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">readonly</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">readonly</span><span class="o">=!!</span><span class="nx">b</span><span class="p">})}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;rating&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">onHover</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">,</span><span class="nx">onLeave</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;RatingController&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/rating/rating.html&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.tabs&quot;</span><span class="p">,[]).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;TabsetController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tabs</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">tabs</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="o">=!</span><span class="mi">1</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">addTab</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),(</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeTab</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">])}</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">1</span><span class="p">)}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tabset&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{},</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;TabsetController&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/tabs/tabset.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">vertical</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">vertical</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">vertical</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">justified</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">justified</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">justified</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;tabs&quot;</span></div><div class='line' id='LC9'><span class="p">}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tab&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^tabset&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/tabs/tab.html&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">heading</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">onSelect</span><span class="o">:</span><span class="s2">&quot;&amp;select&quot;</span><span class="p">,</span><span class="nx">onDeselect</span><span class="o">:</span><span class="s2">&quot;&amp;deselect&quot;</span><span class="p">},</span><span class="nx">controller</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">active</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">active</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">assign</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="o">=!!</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">))</span><span class="o">:</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;active&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">onSelect</span><span class="p">())</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">onDeselect</span><span class="p">()}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">disabled</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">disabled</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=!!</span><span class="nx">a</span><span class="p">}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">disabled</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="o">=!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">f</span><span class="p">.</span><span class="nx">addTab</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeTab</span><span class="p">(</span><span class="nx">b</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$transcludeFn</span><span class="o">=</span><span class="nx">d</span><span class="p">}}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tabHeadingTransclude&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^tab&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;headingElement&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">))})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tabContentTransclude&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="s2">&quot;tab-heading&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="s2">&quot;data-tab-heading&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;tab-heading&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">||</span><span class="s2">&quot;data-tab-heading&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())}</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^tabset&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">tabContentTransclude</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">$transcludeFn</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">$parent</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">headingElement</span><span class="o">=</span><span class="nx">b</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">b</span><span class="p">)})})}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.timepicker&quot;</span><span class="p">,[]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;timepickerConfig&quot;</span><span class="p">,{</span><span class="nx">hourStep</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">minuteStep</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">showMeridian</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">meridians</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">readonlyInput</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">mousewheel</span><span class="o">:!</span><span class="mi">0</span><span class="p">}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;timepicker&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;$log&quot;</span><span class="p">,</span><span class="s2">&quot;timepickerConfig&quot;</span><span class="p">,</span><span class="s2">&quot;$locale&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;?^ngModel&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/timepicker/timepicker.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">hours</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">showMeridian</span><span class="o">?</span><span class="nx">a</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="mi">13</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="mi">24</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">showMeridian</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">12</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">meridian</span><span class="o">===</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">+=</span><span class="mi">12</span><span class="p">)),</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">minutes</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="mi">60</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">m</span><span class="p">(),</span><span class="nx">h</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">p</span><span class="p">)),</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;time&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">invalidHours</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">invalidMinutes</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">getHours</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">showMeridian</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="mi">12</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="mi">12</span><span class="o">:</span><span class="nx">b</span><span class="o">%</span><span class="mi">12</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">hours</span><span class="o">=</span><span class="s2">&quot;h&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">minutes</span><span class="o">=</span><span class="s2">&quot;m&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">k</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">meridian</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">&lt;</span><span class="mi">12</span><span class="o">?</span><span class="nx">q</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">+</span><span class="mi">6</span><span class="nx">e4</span><span class="o">*</span><span class="nx">a</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">getHours</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">()),</span><span class="nx">l</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">meridians</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">meridians</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">meridians</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">DATETIME_FORMATS</span><span class="p">.</span><span class="nx">AMPMS</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">hourStep</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">hourStep</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">hourStep</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">minuteStep</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">minuteStep</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">minuteStep</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">s</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">)}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">showMeridian</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">showMeridian</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">showMeridian</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">showMeridian</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">showMeridian</span><span class="o">=!!</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">$error</span><span class="p">.</span><span class="nx">time</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">j</span><span class="p">();</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">l</span><span class="p">())}</span><span class="k">else</span> <span class="nx">n</span><span class="p">()});</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">w</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">mousewheel</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">mousewheel</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">mousewheel</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">originalEvent</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">originalEvent</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">wheelDelta</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">wheelDelta</span><span class="o">:-</span><span class="nx">a</span><span class="p">.</span><span class="nx">deltaY</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">detail</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">};</span><span class="nx">u</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mousewheel wheel&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">incrementHours</span><span class="p">()</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">decrementHours</span><span class="p">()),</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()}),</span><span class="nx">v</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mousewheel wheel&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">incrementMinutes</span><span class="p">()</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">decrementMinutes</span><span class="p">()),</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()})}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">readonlyInput</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">readonlyInput</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">readonlyInput</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">readonlyInput</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">readonlyInput</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">updateHours</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">updateMinutes</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="kc">null</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;time&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">invalidHours</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">invalidMinutes</span><span class="o">=</span><span class="nx">b</span><span class="p">)};</span><span class="nx">e</span><span class="p">.</span><span class="nx">updateHours</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">();</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">setHours</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;h&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">y</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">u</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">validHours</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">hours</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">hours</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">hours</span><span class="p">)})}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">updateMinutes</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">j</span><span class="p">();</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">setMinutes</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;m&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">y</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">v</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">invalidMinutes</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">minutes</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">minutes</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">minutes</span><span class="p">)})})}</span><span class="nx">h</span><span class="p">.</span><span class="nx">$render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">$modelValue</span><span class="o">?</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;time&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s1">&#39;Timepicker directive: &quot;ng-model&quot; value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.&#39;</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">m</span><span class="p">(),</span><span class="nx">n</span><span class="p">())},</span><span class="nx">e</span><span class="p">.</span><span class="nx">incrementHours</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">(</span><span class="mi">60</span><span class="o">*</span><span class="nx">r</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">decrementHours</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">(</span><span class="mi">60</span><span class="o">*-</span><span class="nx">r</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">incrementMinutes</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">(</span><span class="nx">s</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">decrementMinutes</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">(</span><span class="o">-</span><span class="nx">s</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">toggleMeridian</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">(</span><span class="mi">720</span><span class="o">*</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">getHours</span><span class="p">()</span><span class="o">&lt;</span><span class="mi">12</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">))}}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.bootstrap.typeahead&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.bootstrap.position&quot;</span><span class="p">,</span><span class="s2">&quot;ui.bootstrap.bindHtml&quot;</span><span class="p">]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;typeaheadParser&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/^\s*(.*?)(?:\s+as\s+(.*?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+(.*)$/</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Expected typeahead specification in form of &#39;_modelValue_ (as _label_)? for _item_ in _collection_&#39; but got &#39;&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;&#39;.&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">itemName</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">source</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">4</span><span class="p">]),</span><span class="nx">viewMapper</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">modelMapper</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">])}}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;typeahead&quot;</span><span class="p">,[</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;$q&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$position&quot;</span><span class="p">,</span><span class="s2">&quot;typeaheadParser&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="mi">9</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">38</span><span class="p">,</span><span class="mi">40</span><span class="p">];</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;ngModel&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadMinLength</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadWaitMs</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadEditable</span><span class="p">)</span><span class="o">!==!</span><span class="mi">1</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadLoading</span><span class="p">).</span><span class="nx">assign</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadOnSelect</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadInputFormatter</span><span class="o">?</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadInputFormatter</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadAppendToBody</span><span class="o">?</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadAppendToBody</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">ngModel</span><span class="p">).</span><span class="nx">assign</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeahead</span><span class="p">),</span><span class="nx">w</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s2">&quot;&lt;div typeahead-popup&gt;&lt;/div&gt;&quot;</span><span class="p">);</span><span class="nx">w</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">matches</span><span class="o">:</span><span class="s2">&quot;matches&quot;</span><span class="p">,</span><span class="nx">active</span><span class="o">:</span><span class="s2">&quot;activeIdx&quot;</span><span class="p">,</span><span class="nx">select</span><span class="o">:</span><span class="s2">&quot;select(activeIdx)&quot;</span><span class="p">,</span><span class="nx">query</span><span class="o">:</span><span class="s2">&quot;query&quot;</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;position&quot;</span><span class="p">}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadTemplateUrl</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;template-url&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadTemplateUrl</span><span class="p">);</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">$new</span><span class="p">();</span><span class="nx">i</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">x</span><span class="p">.</span><span class="nx">$destroy</span><span class="p">()});</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="o">=</span><span class="p">[],</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">=-</span><span class="mi">1</span><span class="p">},</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">$viewValue</span><span class="o">:</span><span class="nx">a</span><span class="p">};</span><span class="nx">q</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">source</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">)).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="nx">l</span><span class="p">.</span><span class="nx">$viewValue</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">itemName</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">label</span><span class="o">:</span><span class="nx">v</span><span class="p">.</span><span class="nx">viewMapper</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">model</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]});</span><span class="nx">x</span><span class="p">.</span><span class="nx">query</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="nx">t</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">position</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">x</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">j</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetHeight&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">y</span><span class="p">();</span><span class="nx">q</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">y</span><span class="p">(),</span><span class="nx">q</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)})};</span><span class="nx">y</span><span class="p">(),</span><span class="nx">x</span><span class="p">.</span><span class="nx">query</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">A</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">$parsers</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">n</span><span class="o">?</span><span class="nx">o</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="p">(</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">A</span><span class="p">),</span><span class="nx">A</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">o</span><span class="p">))</span><span class="o">:</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">q</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">y</span><span class="p">()),</span><span class="nx">p</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;editable&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;editable&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">l</span><span class="p">.</span><span class="nx">$formatters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">s</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">$model</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">s</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">itemName</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">viewMapper</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">itemName</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">viewMapper</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">b</span><span class="o">!==</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">x</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">itemName</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">model</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">modelMapper</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">u</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;editable&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">r</span><span class="p">(</span><span class="nx">i</span><span class="p">,{</span><span class="nx">$item</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">$model</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">$label</span><span class="o">:</span><span class="nx">v</span><span class="p">.</span><span class="nx">viewMapper</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">)}),</span><span class="nx">y</span><span class="p">(),</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">focus</span><span class="p">()},</span><span class="nx">j</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="mi">0</span><span class="o">!==</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="mi">40</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">?</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">=</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">$digest</span><span class="p">())</span><span class="o">:</span><span class="mi">38</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">?</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">=</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">?</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">:</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">$digest</span><span class="p">())</span><span class="o">:</span><span class="mi">13</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">||</span><span class="mi">9</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">?</span><span class="nx">x</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">x</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="p">)})</span><span class="o">:</span><span class="mi">27</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">(),</span><span class="nx">y</span><span class="p">(),</span><span class="nx">x</span><span class="p">.</span><span class="nx">$digest</span><span class="p">()))}),</span><span class="nx">j</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">m</span><span class="o">=!</span><span class="mi">1</span><span class="p">});</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="p">(),</span><span class="nx">x</span><span class="p">.</span><span class="nx">$digest</span><span class="p">())};</span><span class="nx">e</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">B</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">B</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">w</span><span class="p">)(</span><span class="nx">x</span><span class="p">);</span><span class="nx">t</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">C</span><span class="p">)}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;typeaheadPopup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">matches</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">query</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">active</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">select</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/typeahead/typeahead-popup.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">templateUrl</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">templateUrl</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">isActive</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="o">==</span><span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectActive</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectMatch</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">select</span><span class="p">({</span><span class="nx">activeIdx</span><span class="o">:</span><span class="nx">b</span><span class="p">})}}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;typeaheadMatch&quot;</span><span class="p">,[</span><span class="s2">&quot;$http&quot;</span><span class="p">,</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">index</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">match</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">query</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">},</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">templateUrl</span><span class="p">)(</span><span class="nx">e</span><span class="p">.</span><span class="nx">$parent</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;template/typeahead/typeahead-match.html&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">h</span><span class="p">,{</span><span class="nx">cache</span><span class="o">:</span><span class="nx">b</span><span class="p">}).</span><span class="nx">success</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">replaceWith</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">trim</span><span class="p">())(</span><span class="nx">e</span><span class="p">))})}}}]).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;typeaheadHighlight&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([.?*+^$[\]\\(){}|-])/g</span><span class="p">,</span><span class="s2">&quot;\\$1&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="s2">&quot;gi&quot;</span><span class="p">),</span><span class="s2">&quot;&lt;strong&gt;$&amp;&lt;/strong&gt;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">}});</span></div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.08187s from github-fe128-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/angular-ui/bootstrap/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

